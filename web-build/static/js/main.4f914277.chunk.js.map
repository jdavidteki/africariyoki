{"version":3,"sources":["components/header/Header.js","components/Song.js","components/Filter.js","components/SongList.js","firebase/firebase.js","components/searcher/Searcher.js","components/lrcParser/LRCParser.js","components/karaokedisplay/KaraokeDisplay.js","components/uploadcontent/UploadContent.js","containers/App.js","firebase/config.js","index.js"],"names":["Header","className","style","fontWeight","textDecoration","color","to","variant","marginRight","fontSize","Component","Song","props","song","title","singer","onClick","playSong","id","SongList","songs","map","getLyrics","Promise","resolve","firebase","database","ref","once","then","snapshot","val","Object","values","storage","deleteRecp","userId","recipientID","child","remove","addAfricariyoki","item","set","lyricsurl","audiourl","lyrics","response","catch","error","console","warn","postTransaction","userInfo","recpInfo","cardInfo","transInfo","user","uid","transactionId","accountNumber","bankName","recpFirstName","firstName","recpLastName","lastName","cardUsed","number","recpAmt","sendAmt","recpCurrency","sendCurrency","rate","isSuccessful","time","Searcher","filterSong","typeSong","state","songsCopy","filter","thisSong","replace","toLowerCase","setState","songId","chooseSong","history","push","pathname","currentSong","filteredSongs","searchOptions","typingEffectSongs","count","searchTerm","Firebase","shuffledSongs","array","i","length","j","Math","floor","random","shuffleArray","a","songIds","setInterval","Autocomplete","value","this","options","renderInput","params","TextField","label","onInputChange","event","newInputValue","onChange","newValue","onKeyUp","key","marginTop","text","slice","speed","eraseDelay","typingDelay","LRCParser","onPlayFunction","line","updateTimer","eventDate","pause","log","add","lrc","play","minutes","seconds","moment","duration","days","hours","Lyric","onPlay","onSetLyric","lines","offset","setLyric","class","KaraokeDisplay","location","animatedTexts","album","showTimer","secs","pauseSong","x","randomSongIndex","randomNumber","clearInterval","subtract","playAnotherSong","newstr","prevChar","includes","src","autoPlay","controls","onEnded","onPause","lrcFormat","displayLyrics","min","max","r","UploadContent","albumName","videoID","addressID","isUploading","progress","audioUrl","lyricsTextUrl","fetch","method","redirect","result","height","display","justifyContent","alignItems","width","padding","flexDirection","Avatar","marginBottom","textAlign","placeholder","e","target","multiline","rows","Button","uploadToFirebase","wrongCred","SignUpErrorMsg","App","path","exact","component","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","initializeApp","config","app","window","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f914277.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './Header.css';\nimport { Link } from 'react-router-dom'\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n          <Link style={{ fontWeight: 900, textDecoration: 'none', color: 'green' }} to = \"/africariyoki\">AFRICARIYOKI</Link>\n          <div className=\"right-part\">\n            <Link\n                variant=\"outlined\"\n                style={{ marginRight: 20, fontSize: 18 }}\n                color=\"primary\"\n                to = \"/africariyoki/upload\"\n              >\n                Upload\n              </Link>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\n\nconst Song = (props) => {\n  return (\n    <tr className=\"song\">\n      <td>{props.song.title}</td>\n      <td>{props.song.singer}</td>\n      <td><button onClick={() => props.playSong(props.song.id)}>Play</button></td>\n    </tr>\n  )\n}\n\nexport default Song;\n","import React, { Component } from 'react';\n\nclass Filter extends Component {\n  render() {\n    return (\n      <div className=\"filter\">\n        <label htmlFor=\"title-filter\">Title: </label>\n        <input onChange={(event)=> this.props.filterSong(event.target.value)} id=\"title-filter\" type=\"text\" value={this.props.filteredSongs} />\n      </div>\n    );\n  }\n}\n\n//spotify access token - BQBC1P9FomMBkGge9c4gtXu4kudpeoJ0Np8cReDe0qsTWaWJSrGTo8Q4l1RYtbk3Weh4A3CybZtoFJVchjemPKYMNrvQtR9-G9uU5XA-oSoLs84zBRpL3aPGjGIvKfLYCvbfPBbJ7cfmBMrqT5vm0OIGXX0nmVg\nexport default Filter;\n","import React from 'react';\nimport Song from './Song'\n\nconst SongList = (props) => {\n  return (\n    <table className=\"song-list\">\n      <tbody>\n        {props.songs.map(song => <Song key= {song.id} song={song} playSong={props.playSong}/>)}\n\n      </tbody>\n    </table>\n  )\n}\n\nexport default SongList;\n","import firebase from \"firebase\";\n\nclass Firebase {\n  getLyrics = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/lyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  storage = () => {\n    return firebase.storage()\n  }\n\n  deleteRecp = (userId, recipientID) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/recipients/' + userId)\n      .child(recipientID)\n      .remove()\n      .then(() => {\n        resolve(true)\n      })\n    })\n  }\n\n  addAfricariyoki = (item) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/lyrics/' + item.id + '/')\n      .set(\n        {\n          id: item.id,\n          title: item.title,\n          lyricsurl: item.lyricsurl,\n          singer: item.singer,\n          audiourl: item.audiourl,\n          lyrics: item.lyrics,\n          title: item.title,\n        },\n      )\n      .then((response) => {\n        resolve(true)\n      })\n      .catch(error => {\n        console.warn(\"error\", error)\n      })\n    })\n  }\n\n  postTransaction = (userInfo, recpInfo, cardInfo, transInfo) =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/userTransactions/' + userInfo.user.uid + '/' + transInfo.id + '/')\n      .set(\n        {\n          transactionId: transInfo.id,\n          accountNumber: recpInfo.accountNumber,\n          bankName: recpInfo.bankName,\n          recpFirstName: recpInfo.firstName,\n          recpLastName: recpInfo.lastName,\n          cardUsed: cardInfo.number,\n          recpAmt: transInfo.recpAmt,\n          sendAmt: transInfo.sendAmt,\n          recpCurrency: transInfo.recpCurrency,\n          sendCurrency: transInfo.sendCurrency,\n          rate: transInfo.rate,\n          isSuccessful: true,\n          time: '13:03'\n        },\n      )\n      .then((response) => {\n        resolve(true)\n      })\n      .catch(error => {\n        console.warn(\"error\", error)\n      })\n    })\n  }\n}\n\nexport default new Firebase();\n","import React, { Component } from 'react';\nimport Filter from '../Filter';\nimport SongList from '../SongList';\nimport Firebase from \"../../firebase/firebase.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ReactTypingEffect from 'react-typing-effect';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport './Searcher.css';\n\nclass Searcher extends Component {\n  constructor(props){\n    super(props);\n\n    this.state= {\n      songs: [],\n      filteredSongs: '',\n      currentSong: '',\n      songsCopy:[],\n      searchOptions: [],\n      typingEffectSongs: [''],\n      count:0,\n    }\n\n    this.searchTerm=''\n  }\n\n  componentDidMount () {\n    Firebase.getLyrics().then(\n      val => {\n        let shuffledSongs = shuffleArray(val.map(a => a.title))\n        this.setState({\n          songs: val,\n          songsCopy: val,\n          searchOptions: shuffledSongs,\n          typingEffectSongs: shuffledSongs,\n          songIds: val.map(a => a.id),\n        })\n      }\n    )\n\n    setInterval( () => {\n      this.setState({\n        count: (this.state.count+1) % 20\n      })\n    }, 4000);\n\n    //TODO: extract bpm from mp3 file so we can those to play the lyrics\n    // var requestOptions = {\n    //   method: 'GET',\n    //   redirect: 'follow'\n    // };\n    // fetch(\"https://firebasestorage.googleapis.com/v0/b/africariyoki.appspot.com/o/preview_accompaniment_Davido%20-%20If%20(Official%20Music%20Video).mp3?alt=media&token=5e3883ef-468f-470c-b4ae-e5a117152c51\", requestOptions)\n    //   .then(response => {\n    //     response.text()\n    //     console.log(\"response\", response.body)\n    //     var context = new AudioContext();\n    //     // context.decodeAudioData(response.body, this.calcTempo);\n    //   })\n    //   .then(result => console.log(result))\n    //   .catch(error => console.log('error', error));\n  }\n\n  filterSong = (song) => {\n    let typeSong = this.state.songsCopy.filter(thisSong => song.replace(' ', '').toLowerCase() === thisSong.title.replace(' ', '').toLowerCase())\n\n    if (song == ''){\n      this.setState({\n        songs: this.state.songsCopy\n      })\n    }else{\n      this.setState({\n        songs: typeSong\n      })\n    }\n  }\n\n  playSong= (songId) => {\n    let chooseSong = this.state.songs.filter(song => songId === song.id)\n\n    this.props.history.push({\n      pathname: \"/africariyoki/karaokedisplay/\" + songId,\n      state: { chooseSong: chooseSong, songs: this.state.songsCopy}\n    });\n\n    this.setState({\n      songs: chooseSong,\n      currentSong: chooseSong\n    })\n  }\n\n  // calcTempo = (buffer) => {\n  //   var audioData = [];\n  //   // Take the average of the two channels\n  //   if (buffer.numberOfChannels == 2) {\n  //     var channel1Data = buffer.getChannelData(0);\n  //     var channel2Data = buffer.getChannelData(1);\n  //     var length = channel1Data.length;\n  //     for (var i = 0; i < length; i++) {\n  //       audioData[i] = (channel1Data[i] + channel2Data[i]) / 2;\n  //     }\n  //   } else {\n  //     audioData = buffer.getChannelData(0);\n  //   }\n  //   var mt = new MusicTempo(audioData);\n\n  //   console.log(mt.tempo);\n  //   console.log(mt.beats);\n  // }\n\n  render() {\n    return (\n      <div className=\"Searcher-container\">\n        <div className=\"Searcher-container\">\n          <Autocomplete\n            id=\"controllable-states-demo\"\n            value={this.searchTerm}\n            options={this.state.searchOptions}\n            renderInput={(params) =>\n              <TextField\n                {...params}\n                className=\"Searcher-input\"\n                label=\"what do you want to sing today\"\n                variant=\"outlined\"\n              />\n            }\n            onInputChange={(event, newInputValue) => {\n              this.searchTerm = newInputValue\n            }}\n            onChange={(event, newValue) => {\n              this.filterSong(this.searchTerm)\n            }}\n            onKeyUp = {event => {\n              if (event.key === 'Enter') {\n                this.filterSong(this.searchTerm)\n              }\n            }}\n          />\n\n          <SongList songs={this.state.songs} filteredSongs={this.state.filteredSongs} playSong={this.playSong}/>\n\n          <ReactTypingEffect\n            style={{ marginTop: 50, fontSize: 24, color: '#3F51B5' }}\n            text={this.state.typingEffectSongs.slice(0, 20)[this.state.count]}\n            speed={150}\n            eraseDelay={150}\n            typingDelay={150}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Searcher;\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array\n}\n\n//https://www.lalal.ai/?gclid=CjwKCAiArbv_BRA8EiwAYGs23LTomkIzDCGjHTkK-SQlhargxYyajraHsgux9WClyYvOXJnLQ7surhoCNbIQAvD_BwE\n//https://mp3downy.com/MP3-converter?apikey=1234567890\n\n//do  ./ngrok http 5000 in /vocalremover to run ngrok","import React, { Component } from 'react';\nimport Lyric from 'lrc-file-parser'\nimport moment from \"moment\"\n\nimport './LRCParser.css';\n\nclass LRCParser extends Component {\n  constructor(props){\n    super(props);\n\n    this.state= {\n      title: \"hersss\",\n      line:\"\",\n      text:\"\",\n      eventDate: moment.duration().add({days:0,hours:0,minutes:0,seconds:0}),\n      lrc: new Lyric({\n          onPlay: this.onPlayFunction,\n          onSetLyric: function (lines) {},\n          offset: 150\n      })\n    }\n  }\n\n  onPlayFunction = (line, text) => {\n    this.setState({line: line, text: text})\n  }\n\n  updateTimer=()=>{\n    const x = setInterval(()=>{\n      let { eventDate} = this.state\n\n      if (!this.props.pause){\n        console.log(\"either pause or play\")\n        eventDate = eventDate.add(1,\"s\")\n        this.state.lrc.play((eventDate.minutes() * 60000) + (eventDate.seconds() * 1000))\n\n        this.setState({\n          eventDate\n        })\n      }\n\n    },1000)\n  }\n\n  componentDidMount(){\n    this.updateTimer()\n\n    console.log(this.props.lyrics)\n\n    this.state.lrc.setLyric(this.props.lyrics)\n  }\n\n  render() {\n    return (\n      <div class=\"Lyrics-container LRCParser-container\">\n        {this.state.text}\n      </div>\n    );\n  }\n}\n\nexport default LRCParser;\n","import React, { Component } from 'react';\nimport \"./KaraokeDisplay.css\";\nimport ReactTypingEffect from 'react-typing-effect';\nimport ReactAudioPlayer from 'react-audio-player';\nimport moment from \"moment\"\nimport LRCParser from '../lrcParser/LRCParser';\n\nclass KaraokeDisplay extends Component {\n  state={\n    singer: this.props.location.state.chooseSong[0],\n    animatedTexts: [\n      this.props.location.state.chooseSong[0].title,\n      this.props.location.state.chooseSong[0].singer,\n      this.props.location.state.chooseSong[0].album,\n    ],\n    showTimer: false,\n    count:0,\n    eventDate: moment.duration().add({days:0,hours:0,minutes:0,seconds:5}), // add 9 full days, 3 hours, 40 minutes and 50 seconds\n    secs:0,\n    pauseSong: false\n  }\n\n  updateTimer=()=>{\n    const x = setInterval(()=>{\n      let { eventDate} = this.state\n\n      if(eventDate <=0){\n        let randomSongIndex = randomNumber(0, this.props.location.state.songs.length)\n        this.setState({\n          singer: this.props.location.state.songs[randomSongIndex],\n          animatedTexts: [\n            this.props.location.state.songs[randomSongIndex].title,\n            this.props.location.state.songs[randomSongIndex].singer,\n            this.props.location.state.songs[randomSongIndex].album,\n          ],\n          count:0,\n          eventDate: moment.duration().add({days:0,hours:0,minutes:0,seconds:5}), // add 9 full days, 3 hours, 40 minutes and 50 seconds\n          secs:0,\n          showTimer: false\n        })\n        clearInterval(x)\n      }else {\n        eventDate = eventDate.subtract(1,\"s\")\n        const secs = eventDate.seconds()\n\n        this.setState({\n          secs,\n          eventDate,\n          showTimer: true\n        })\n      }\n    },1000)\n  }\n\n  playAnotherSong = () => {\n    this.updateTimer()\n  }\n\n  async componentDidMount(){\n    setInterval( () => {\n      this.setState({\n        count: (this.state.count+1) % 2\n      })\n    }, 5000);\n  }\n\n\n  displayLyrics(){\n    let lyrics = this.state.singer.lyrics.replace(\"b\\\"\", '')\n    var newstr = \"\";\n    var prevChar = '';\n\n    for( var i = 0; i < lyrics.length; i++ ){\n      if(lyrics[i] == \"\\\\\"){\n        newstr += ' \\n ';\n        prevChar = 't'\n      }else{\n        if (prevChar == 't'){\n          newstr += lyrics[i+1];\n        }else{\n          newstr += lyrics[i];\n          prevChar = ''\n        }\n      }\n    }\n\n    return newstr\n  }\n\n  lrcFormat(){\n    let lyrics = this.state.singer.lyrics\n    return lyrics.includes(\"[00\")\n  }\n\n  render() {\n    if (this.props) {\n      return (\n        <div className=\"KaraokeDisplay-container\">\n          <ReactAudioPlayer\n            src={this.state.singer.audiourl.includes('africariyoki-4b634') ? this.state.singer.audiourl : this.state.singer.audiourl.replace('africariyoki', 'africariyoki-4b634')} //because im cheap and im not paying for firebase\n            autoPlay\n            controls\n            className={\"KaraokeDisplay-audio\"}\n            onEnded={this.playAnotherSong}\n            onPause={ () => {this.setState({pauseSong: true})}}\n            onPlay = {() => {this.setState({pauseSong: false})}}\n          />\n\n          {this.state.showTimer &&\n            <div className=\"KaraokeDisplay-showTimer\">\n              <span>Playing next song in... {` ${this.state.secs}`} secs</span>\n            </div>\n          }\n\n          <h2>{this.state.singer.title} by {this.state.singer.singer}</h2>\n          <pre className=\"Lyrics\">\n            {this.lrcFormat() ?\n              <LRCParser\n                lyrics = {this.displayLyrics()}\n                pause = {this.state.pauseSong}\n              />\n                :\n              <span className=\"Lyrics-container\">\n                {this.displayLyrics()}\n              </span>\n            }\n          </pre>\n          <ReactTypingEffect\n            style={{ marginTop: 20, fontSize: 24, color: '#3F51B5' }}\n            text={this.state.animatedTexts[this.state.count]}\n            speed={150}\n            eraseDelay={150}\n            typingDelay={150}\n          />\n        </div>\n      )\n    }\n  }\n}\n\nexport default KaraokeDisplay;\n\nfunction randomNumber(min, max){\n  const r = Math.random()*(max-min) + min\n  return Math.floor(r)\n}","import React, { Component } from \"react\";\nimport Avatar from '@material-ui/core/Avatar';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Firebase from \"../../firebase/firebase.js\";\nimport MetaTags from 'react-meta-tags';\nimport \"./UploadContent.css\"\n\nclass UploadContent extends Component {\n\n    state = {\n        albumName: \"\",\n        singer: \"\",\n        title: \"\",\n        lyrics: \"\",\n        videoID: \"\",\n        addressID: \"\",\n        isUploading: false,\n        progress: 0,\n    };\n\n    uploadToFirebase(){\n        //uZ-_HIoEBE8\n        if (this.state.videoID != \"\"){\n            let audioUrl = `https://storage.googleapis.com/africariyoki-4b634.appspot.com/music/${this.state.videoID}.mp3`\n            let lyricsTextUrl = `https://storage.googleapis.com/africariyoki-4b634.appspot.com/lyrics/${this.state.videoID}.txt`\n            let addressID = this.state.addressID\n            if(addressID == ''){\n                addressID = \"http://0.0.0.0:5000\"\n            }else{\n                addressID = \"https://\"+addressID+\".ngrok.io\"\n            }\n\n            Firebase.addAfricariyoki({\n                title: this.state.title,\n                singer: this.state.singer,\n                title: this.state.title,\n                audiourl: audioUrl,\n                lyricsurl: lyricsTextUrl,\n                lyrics: this.state.lyrics,\n                id: this.state.videoID,\n            })\n\n            //use ai to extract vocall from music and upload instrumental\n            var requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n            };\n            fetch(`${addressID}/vr/${this.state.videoID}`, requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n        }\n    }\n\n    render() {\n        return (\n            <div style={{height: \"100%\"}}>\n                <div style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}>\n                    <MetaTags>\n                        {/* <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\"></meta> */}\n                    </MetaTags>\n                    <div\n                    style={{\n                        width: 320,\n                        padding: 30,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        flexDirection: \"column\"\n                    }}\n                    >\n                    <Avatar style={{ marginBottom: 10 }}>\n                        <MusicNoteIcon />\n                    </Avatar>\n                    <div\n                        style={{\n                        marginBottom: 20,\n                        fontSize: 24,\n                        textAlign: \"center\"\n                        }}\n                    >\n                        {\" \"}\n                        Upload song information\n                        {\" \"}\n                    </div>\n                    <TextField\n                        value={this.state.title}\n                        placeholder=\"Song title\"\n                        onChange={e => {\n                        this.setState({ title: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        value={this.state.singer}\n                        placeholder=\"Singer\"\n                        onChange={e => {\n                        this.setState({ singer: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        value={this.state.albumName}\n                        placeholder=\"Album\"\n                        onChange={e => {\n                        this.setState({ albumName: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        value={this.state.videoID}\n                        placeholder=\"Youtube Video ID\"\n                        onChange={e => {\n                        this.setState({ videoID: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        value={this.state.addressID}\n                        placeholder=\"address ID\"\n                        onChange={e => {\n                            this.setState({ addressID: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        style={{ height: 100}}\n                        value={this.state.lyrics}\n                        placeholder=\"Lyrics - paste lyrics here\"\n                        multiline\n                        rows={4}\n                        onChange={e => {\n                        this.setState({ lyrics: e.target.value });\n                        }}\n                    />\n                    <Button\n                        style={{ marginTop: 20, width: 200 }}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => {\n                            this.uploadToFirebase()\n                        }}\n                    >\n                    Upload\n                    </Button>\n                    {this.state.wrongCred && (\n                        <div style={{ color: \"red\" }}>{this.state.SignUpErrorMsg}</div>\n                    )}\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default UploadContent;\n\n\n//https://material-ui.com/components/material-icons/#material-icons","import React, { Component } from 'react';\nimport Header from '../components/header/Header';\nimport Searcher from '../components/searcher/Searcher.js';\nimport KaraokeDisplay from '../components/karaokedisplay/KaraokeDisplay.js'\nimport UploadContent from '../components/uploadcontent/UploadContent.js'\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <div className=\"app-body\">\n          <div className=\"content\">\n            <Switch>\n              <Route path=\"/africariyoki\" exact component={Searcher} />\n              <Route path=\"/africariyoki/karaokedisplay/:id\" exact component={KaraokeDisplay} />\n              <Route path=\"/africariyoki/upload\" exact component={UploadContent} />\n              <Route\n                component={() => (\n                  <div style={{ padding: 20 }}>Page not found</div>\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const firebaseConfig = {\n  apiKey: \"AIzaSyCIg3Xc3yYNYgXL90XXwaW2cyMafnvusYE\",\n  authDomain: \"africariyoki-4b634.firebaseapp.com\",\n  databaseURL: \"https://africariyoki-4b634-default-rtdb.firebaseio.com\",\n  projectId: \"africariyoki-4b634\",\n  storageBucket: \"africariyoki-4b634.appspot.com\",\n  messagingSenderId: \"171492275085\",\n  appId: \"1:171492275085:web:f2c1364b0feee41e1083c4\",\n  measurementId: \"G-TSPVJ130EK\"\n};\n\nexport default firebaseConfig","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/pure-min.css';\nimport './assets/css/index.css';\nimport App from './containers/App';\nimport firebase from \"firebase\";\nimport config from './firebase/config.js';\nimport { BrowserRouter } from \"react-router-dom\";\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(config);\n}\n\nlet app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}