{"version":3,"sources":["components/header/Header.js","components/song/Song.js","components/songLIst/SongList.js","firebase/firebase.js","components/clouds/Clouds.js","components/searcher/Searcher.js","components/lrcParser/LRCParser.js","components/lrcFixer/LRCFixer.js","components/karaokedisplay/KaraokeDisplay.js","components/uploadcontent/UploadContent.js","containers/App.js","firebase/config.js","index.js"],"names":["Header","className","style","fontFamily","fontWeight","textDecoration","color","to","variant","marginRight","fontSize","Component","Song","props","console","log","onClick","playSong","song","id","title","singer","SongList","expandResults","filteredSongs","length","map","getLyrics","Promise","resolve","firebase","database","ref","once","then","snapshot","val","Object","values","storage","deleteRecp","userId","recipientID","child","remove","addAfricariyoki","item","set","lyricsurl","audiourl","lyrics","response","catch","error","warn","updateLyrics","songId","update","postTransaction","userInfo","recpInfo","cardInfo","transInfo","user","uid","transactionId","accountNumber","bankName","recpFirstName","firstName","recpLastName","lastName","cardUsed","number","recpAmt","sendAmt","recpCurrency","sendCurrency","rate","isSuccessful","time","Clouds","state","albumName","class","Searcher","filterSong","setState","typeSong","songsCopy","filter","thisSong","replace","toLowerCase","includes","songs","chooseSong","history","push","pathname","currentSong","searchOptions","typingEffectSongs","count","query","searchTerm","Firebase","shuffledSongs","array","i","j","Math","floor","random","shuffleArray","a","songIds","setInterval","TextField","label","onChange","event","target","value","this","marginTop","text","slice","speed","eraseDelay","typingDelay","cleanLine","string","LRCParser","player","onPlayFunction","lineNumber","currentLine","onSetLyricFunction","arrayLyrics","updateTimer","eventDate","pause","lrc","add","play","minutes","seconds","prevLine","nextLine","moment","duration","days","hours","Lyric","onPlay","onSetLyric","offset","setLyric","LRCFixer","handleChange","prepareLyricsForFixing","lyricsArray","split","lyricsArrayClean","trim","noTimeStamp","confirm","YT","Player","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","setTimeout","width","height","videoId","playerVars","onYouTubeIframeAPIReady","loadScript","lyricLine","round","formatTime","getCurrentTime","join","Button","timeStamp","KaraokeDisplay","location","animatedTexts","album","showTimer","secs","pauseSong","lrcFixer","x","randomSongIndex","randomNumber","window","pushState","clearInterval","subtract","playAnotherSong","newstr","prevChar","tenure","prompt","alert","autoPlay","controls","controlsList","onEnded","onPause","displayLyrics","lrcFormat","toggleLrcFixer","min","max","r","UploadContent","videoID","addressID","isUploading","progress","audioUrl","lyricsTextUrl","fetch","method","redirect","result","display","justifyContent","alignItems","padding","flexDirection","Avatar","marginBottom","textAlign","placeholder","e","multiline","rows","uploadToFirebase","wrongCred","SignUpErrorMsg","App","path","exact","component","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","initializeApp","config","app","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.73082ed9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'\n\nimport './Header.scss';\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n          <Link style={{ fontFamily:'fantasy', fontWeight: 900, textDecoration: 'none', color: 'green' }} to = \"/africariyoki\">africariyoki!</Link>\n          <div className=\"right-part\">\n            <Link\n              variant=\"outlined\"\n              style={{ fontFamily:'fantasy', color: 'green', marginRight: 20, fontSize: 18, textDecoration: 'none' }}\n              color=\"primary\"\n              to = \"/africariyoki/upload\"\n            >\n                upload\n            </Link>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './Song.scss';\n\nconst Song = (props) => {\n  console.log(props)\n  return (\n    <div\n      className=\"Song\"\n      onClick={() => props.playSong(props.song.id)}\n    >\n      <span>{props.song.title}</span>\n      <span>{props.song.singer}</span>\n    </div>\n  )\n}\n\nexport default Song;\n","import React from 'react';\nimport Song from '../song/Song'\nimport './SongList.scss';\n\nconst SongList = (props) => {\n  let className = \"SongList\"\n  if (props.expandResults == true){\n    className = \"SongList SongList-expandResults\"\n  }\n  return (\n    <div className={className}>\n      {\n        props.filteredSongs.length > 0\n        ?\n          <div className=\"SongList-container\">\n            {props.filteredSongs.map(song => <Song key= {song.id} song={song} playSong={props.playSong}/>)}\n          </div>\n        :\n          <div className=\"SongList-emptySearch\">\n            you too search something we have, mtchewww\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default SongList;\n","import firebase from \"firebase\";\n\nclass Firebase {\n  getLyrics = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/lyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  storage = () => {\n    return firebase.storage()\n  }\n\n  deleteRecp = (userId, recipientID) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/recipients/' + userId)\n      .child(recipientID)\n      .remove()\n      .then(() => {\n        resolve(true)\n      })\n    })\n  }\n\n  addAfricariyoki = (item) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/lyrics/' + item.id + '/')\n      .set(\n        {\n          id: item.id,\n          title: item.title,\n          lyricsurl: item.lyricsurl,\n          singer: item.singer,\n          audiourl: item.audiourl,\n          lyrics: item.lyrics,\n          title: item.title,\n        },\n      )\n      .then((response) => {\n        resolve(true)\n      })\n      .catch(error => {\n        console.warn(\"error\", error)\n      })\n    })\n  }\n\n  updateLyrics = (songId, lyrics) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/lyrics/' + songId + '/')\n      .update(\n        {\n          lyrics: lyrics,\n        },\n      )\n      .then((response) => {\n        console.log(\"reposne\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  postTransaction = (userInfo, recpInfo, cardInfo, transInfo) =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/userTransactions/' + userInfo.user.uid + '/' + transInfo.id + '/')\n      .set(\n        {\n          transactionId: transInfo.id,\n          accountNumber: recpInfo.accountNumber,\n          bankName: recpInfo.bankName,\n          recpFirstName: recpInfo.firstName,\n          recpLastName: recpInfo.lastName,\n          cardUsed: cardInfo.number,\n          recpAmt: transInfo.recpAmt,\n          sendAmt: transInfo.sendAmt,\n          recpCurrency: transInfo.recpCurrency,\n          sendCurrency: transInfo.sendCurrency,\n          rate: transInfo.rate,\n          isSuccessful: true,\n          time: '13:03'\n        },\n      )\n      .then((response) => {\n        resolve(true)\n      })\n      .catch(error => {\n        console.warn(\"error\", error)\n      })\n    })\n  }\n}\n\nexport default new Firebase();\n","import React, { Component } from \"react\";\n\nimport \"./Clouds.scss\"\n\nclass Clouds extends Component {\n\n    state = {\n        albumName: \"\",\n    };\n\n\n    render() {\n        return (\n            <div className=\"Clouds\" id=\"clouds\">\n                <div class=\"cloud x1\"></div>\n                <div class=\"cloud x2\"></div>\n                <div class=\"cloud x3\"></div>\n                <div class=\"cloud x4\"></div>\n                <div class=\"cloud x5\"></div>\n            </div>\n        )\n    }\n}\n\nexport default Clouds;\n","import React, { Component } from 'react';\nimport SongList from '../songLIst/SongList';\nimport Firebase from \"../../firebase/firebase.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ReactTypingEffect from 'react-typing-effect';\nimport Clouds from '../clouds/Clouds'\n\nimport './Searcher.scss';\n\nclass Searcher extends Component {\n  constructor(props){\n    super(props);\n\n    this.state= {\n      songs: [],\n      filteredSongs: [],\n      currentSong: '',\n      songsCopy:[],\n      searchOptions: [],\n      typingEffectSongs: [''],\n      count:0,\n      query: '',\n      expandResults: false,\n    }\n\n    this.searchTerm=''\n  }\n\n  componentDidMount () {\n    Firebase.getLyrics().then(\n      val => {\n        let shuffledSongs = shuffleArray(val.map(a => a.title))\n        this.setState({\n          songs: val,\n          songsCopy: val,\n          searchOptions: shuffledSongs,\n          typingEffectSongs: shuffledSongs,\n          songIds: val.map(a => a.id),\n        })\n      }\n    )\n\n    setInterval( () => {\n      this.setState({\n        count: (this.state.count+1) % 20\n      })\n    }, 4000);\n  }\n\n  filterSong = (song) => {\n    if (!this.state.expandResults){\n      this.setState({expandResults: true})\n    }\n\n    if (song==\"\"){\n      this.setState({expandResults: false})\n    }\n\n    let typeSong = this.state.songsCopy.filter(thisSong =>\n      thisSong.title.replace(' ', '').toLowerCase().includes(song.replace(' ', '').toLowerCase()) ||\n      thisSong.singer.replace(' ', '').toLowerCase().includes(song.replace(' ', '').toLowerCase())\n    )\n\n    if (song == ''){\n      this.setState({\n        songs: this.state.songsCopy\n      })\n    }else{\n      this.setState({\n        filteredSongs: typeSong\n      })\n    }\n  }\n\n  playSong= (songId) => {\n    let chooseSong = this.state.songs.filter(song => songId === song.id)\n\n    this.props.history.push({\n      pathname: \"/africariyoki/karaokedisplay/\" + songId,\n      state: { chooseSong: chooseSong, songs: this.state.songsCopy}\n    });\n\n    this.setState({\n      songs: chooseSong,\n      currentSong: chooseSong\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"Searcher\">\n        <Clouds/>\n        <div className=\"Searcher-container\">\n          <TextField\n            className=\"Searcher-input\"\n            label=\"what do you want to sing today??\"\n            variant=\"outlined\"\n            onChange={event=>{\n              this.setState({query: event.target.value}, ()=> {\n                this.filterSong(this.state.query)\n              })\n            }}\n          />\n\n          <SongList\n            songs={this.state.songs}\n            filteredSongs={this.state.filteredSongs}\n            playSong={this.playSong}\n            expandResults={this.state.expandResults}\n          />\n\n          <ReactTypingEffect\n            style={{ marginTop: 50, fontSize: 12, color: '#3F51B5' }}\n            text={this.state.typingEffectSongs.slice(0, 20)[this.state.count]}\n            speed={150}\n            eraseDelay={150}\n            typingDelay={150}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Searcher;\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array\n}\n\n//https://www.lalal.ai/?gclid=CjwKCAiArbv_BRA8EiwAYGs23LTomkIzDCGjHTkK-SQlhargxYyajraHsgux9WClyYvOXJnLQ7surhoCNbIQAvD_BwE\n//https://mp3downy.com/MP3-converter?apikey=1234567890\n\n//do  ./ngrok http 5000 in /vocalremover to run ngrok","import React, { Component } from 'react';\nimport Lyric from 'lrc-file-parser'\nimport moment from \"moment\"\n\nimport './LRCParser.scss';\n\nclass LRCParser extends Component {\n  constructor(props){\n    super(props);\n\n    this.state= {\n      title: \"hersss\",\n      lineNumber:1,\n      prevLine: \"\",\n      currentLine:\"\",\n      nextLine: \"\",\n      arrayLyrics: [],\n      eventDate: moment.duration().add({days:0,hours:0,minutes:0,seconds:0}),\n      lrc: new Lyric({\n          onPlay: this.onPlayFunction,\n          onSetLyric: this.onSetLyricFunction,\n          offset: 15000\n      })\n    }\n  }\n\n  onPlayFunction = (lineNumber, currentLine) => {\n    this.setState({lineNumber: lineNumber, currentLine: currentLine})\n  }\n\n  onSetLyricFunction = (arrayLyrics) => {\n    this.setState({arrayLyrics: arrayLyrics})\n  }\n\n  updateTimer=()=>{\n    const x = setInterval(()=>{\n\n      let { eventDate} = this.state\n\n      if (!this.props.pause){\n        eventDate = eventDate.add(1,\"s\")\n        this.state.lrc.play((eventDate.minutes() * 60000) + (eventDate.seconds() * 1000))\n\n        this.setState({\n          eventDate\n        })\n      }else{\n        this.state.lrc.pause()\n      }\n    },1000)\n  }\n\n  componentDidMount(){\n    this.updateTimer()\n\n    this.state.lrc.setLyric(this.props.lyrics)\n    this.state.lrc.play(0)\n  }\n\n  render() {\n    return (\n      <div className=\"Lyrics-container LRCParser-container\">\n        {this.state.arrayLyrics[this.state.lineNumber - 1] &&\n          <p>{cleanLine(this.state.arrayLyrics[this.state.lineNumber - 1].text)}</p>\n        }\n        <p className=\"LRCParser-currentLine\">\n          {cleanLine(this.state.currentLine)}\n        </p>\n        {this.state.arrayLyrics[this.state.lineNumber + 1] &&\n          <p>{cleanLine(this.state.arrayLyrics[this.state.lineNumber + 1].text)}</p>\n        }\n      </div>\n    );\n  }\n}\n\nfunction cleanLine(string){\n  return string.replace(/[^\\w\\s]/gi, '').toLowerCase().replace(\"by rentanadvisercom\", '***')\n}\n\nexport default LRCParser;\n","import React, { Component } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Firebase from \"../../firebase/firebase.js\";\n\nimport './LRCFixer.scss';\n\nvar player;\n\nclass LRCFixer extends Component {\n  constructor(props){\n    super(props);\n    this.state= {\n        songId: props.songId,\n        lyrics: props.lyrics,\n        lyricsArrayClean: [],\n        noTimeStamp: 0,\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n        lyrics: event.target.value\n    }, ()=>{\n      this.prepareLyricsForFixing()\n    });\n  }\n\n  updateLyrics(){\n    var userPreference;\n\n    if (confirm(\"are you sure?\") == true) {\n        userPreference = \"saving lrc to firebase...\";\n        Firebase.updateLyrics(this.state.songId, this.state.lyrics)\n    } else {\n        userPreference = \"save cancelled!\";\n    }\n  }\n\n  prepareLyricsForFixing = () => {\n    let lyrics = this.state.lyrics\n    let timeStampRegex = /\\d\\d:\\d\\d.\\d\\d/gm\n    lyrics = lyrics.replace(timeStampRegex, '').replace(/[^\\w\\s]/gi, '')\n    this.setState({lyrics: lyrics},\n      () =>{\n        let lyricsArray = lyrics.split(\"\\n\")\n        let lyricsArrayClean = []\n        for (var i = 0; i < lyricsArray.length; i++) {\n          if (lyricsArray[i] != \" \"){\n            lyricsArrayClean.push(lyricsArray[i].trim())\n          }\n        }\n        this.setState({lyricsArrayClean: lyricsArrayClean})\n      })\n  }\n\n  componentDidMount(){\n    loadScript(this.state.songId)\n    this.prepareLyricsForFixing()\n  }\n\n  timeStamp(){\n    this.setState({noTimeStamp: this.state.noTimeStamp + 1},\n    () => {\n      let lyricsArrayClean = this.state.lyricsArrayClean\n      let lyricLine = lyricsArrayClean[this.state.noTimeStamp-1]\n      lyricLine = `[${formatTime( player.getCurrentTime())}]${lyricLine}`\n      lyricsArrayClean[this.state.noTimeStamp-1] = lyricLine\n      this.setState({lyricsArrayClean: lyricsArrayClean, lyrics: lyricsArrayClean.join(\" \\n\")})\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"LRCFixer\">\n        <div id=\"video-placeholder\" style={{width: \"100%\"}}></div>\n        <textarea\n          className=\"Lyrics-container\"\n          onChange={this.handleChange}\n          value={this.state.lyrics}\n        />\n        <div>\n          <Button\n            onClick={()=> this.timeStamp()}\n          >\n            time stamp!\n          </Button>\n\n          <Button\n            onClick={()=> this.updateLyrics()}\n          >\n            update lyrics\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction onYouTubeIframeAPIReady(songId){\n\n  player = new YT.Player('video-placeholder', {\n      width: 600,\n      height: 100,\n      videoId: songId,\n      playerVars: {\n          color: 'white',\n      },\n  });\n}\n\nfunction formatTime(time){\n  time = Math.round(time);\n\n  var minutes = Math.floor(time / 60),\n  seconds = time - minutes * 60;\n\n  seconds = seconds < 10 ? '0' + seconds : seconds;\n\n  return \"0\" + minutes + \":\" + seconds + \".00\";\n}\n\nfunction loadScript(songId){\n  if (typeof(YT) == 'undefined' || typeof(YT.Player) == 'undefined') {\n      var tag = document.createElement('script');\n      tag.src = \"https://www.youtube.com/iframe_api\";\n      var firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  }\n\n  setTimeout(() => {   onYouTubeIframeAPIReady(songId) }, 1000);\n\n}\n\nexport default LRCFixer;\n","import React, { Component } from 'react';\nimport ReactTypingEffect from 'react-typing-effect';\nimport ReactAudioPlayer from 'react-audio-player';\nimport moment from \"moment\"\nimport LRCParser from '../lrcParser/LRCParser';\nimport Button from \"@material-ui/core/Button\";\nimport LRCFixer from '../lrcFixer/LRCFixer';\nimport Clouds from '../clouds/Clouds'\n\nimport \"./KaraokeDisplay.scss\";\n\nclass KaraokeDisplay extends Component {\n  state={\n    singer: this.props.location.state.chooseSong[0],\n    animatedTexts: [\n      this.props.location.state.chooseSong[0].title,\n      this.props.location.state.chooseSong[0].singer,\n      this.props.location.state.chooseSong[0].album,\n    ],\n    showTimer: false,\n    count:0,\n    eventDate: moment.duration().add({days:0,hours:0,minutes:0,seconds:5}), // add 9 full days, 3 hours, 40 minutes and 50 seconds\n    secs:0,\n    pauseSong: false,\n    lrcFixer: false,\n  }\n\n  updateTimer=()=>{\n    const x = setInterval(()=>{\n      let { eventDate} = this.state\n\n      if(eventDate <=0){\n        let randomSongIndex = randomNumber(0, this.props.location.state.songs.length)\n        this.setState({\n          singer: this.props.location.state.songs[randomSongIndex],\n          animatedTexts: [\n            this.props.location.state.songs[randomSongIndex].title,\n            this.props.location.state.songs[randomSongIndex].singer,\n            this.props.location.state.songs[randomSongIndex].album,\n          ],\n          count:0,\n          eventDate: moment.duration().add({days:0,hours:0,minutes:0,seconds:5}), // add 9 full days, 3 hours, 40 minutes and 50 seconds\n          secs:0,\n          showTimer: false\n        }, ()=>{\n          window.history.pushState({}, 'update', `${this.state.singer.id}`);\n        })\n        clearInterval(x)\n      }else {\n        eventDate = eventDate.subtract(1,\"s\")\n        const secs = eventDate.seconds()\n\n        this.setState({\n          secs,\n          eventDate,\n          showTimer: true\n        })\n      }\n    },1000)\n  }\n\n  playAnotherSong = () => {\n    this.updateTimer()\n  }\n\n  async componentDidMount(){\n    setInterval( () => {\n      this.setState({\n        count: (this.state.count+1) % 2\n      })\n    }, 5000);\n  }\n\n\n  displayLyrics(){\n    let lyrics = this.state.singer.lyrics.replace(\"b\\\"\", '')\n    var newstr = \"\";\n    var prevChar = '';\n\n    for( var i = 0; i < lyrics.length; i++ ){\n      if(lyrics[i] == \"\\\\\"){\n        newstr += ' \\n ';\n        prevChar = 't'\n      }else{\n        if (prevChar == 't'){\n          newstr += lyrics[i+1];\n        }else{\n          newstr += lyrics[i];\n          prevChar = ''\n        }\n      }\n    }\n\n    return cleanLine(newstr)\n  }\n\n  lrcFormat(){\n    let lyrics = this.state.singer.lyrics\n    return lyrics.includes(\"[00\")\n  }\n\n  toggleLrcFixer(){\n\n    var tenure = prompt(\"Please enter master password\", \"\");\n\n    if (tenure != null && tenure == \"1226\") {\n      if (this.state.lrcFixer) {\n        this.setState({lrcFixer: false})\n      }else{\n        this.setState({lrcFixer: true})\n      }\n    }else{\n      alert(\"sorry, invalid password\")\n    }\n  }\n\n  render() {\n    if (this.props) {\n      return (\n        <div className=\"KaraokeDisplay KaraokeDisplay-container\">\n          {!this.state.lrcFixer &&\n            <ReactAudioPlayer\n              src={this.state.singer.audiourl.includes('africariyoki-4b634') ? this.state.singer.audiourl : this.state.singer.audiourl.replace('africariyoki', 'africariyoki-4b634')} //because im cheap and im not paying for firebase\n              autoPlay\n              controls\n              controlsList=\"nodownload\"\n              className={\"KaraokeDisplay-audio\"}\n              onEnded={this.playAnotherSong}\n              onPause={ () => {this.setState({pauseSong: true})}}\n              onPlay = {() => {this.setState({pauseSong: false})}}\n            />\n          }\n\n          {this.state.showTimer &&\n            <div className=\"KaraokeDisplay-showTimer\">\n              <span>Playing next song in... {` ${this.state.secs}`} secs</span>\n            </div>\n          }\n\n          <h2 style={{ marginTop: 20, fontSize: 24, color: '#3F51B5', fontFamily: 'fantasy'}}>\n            {this.state.singer.title} by {this.state.singer.singer}\n          </h2>\n\n          <div className=\"KaraokeDisplay-cloudBackground\">\n            <Clouds/>\n\n            {this.state.lrcFixer ?\n              <div className=\"Lyrics Lyrics-LRCFixercontainer\">\n                <LRCFixer\n                  lyrics={this.displayLyrics()}\n                  songId={this.state.singer.id}\n                />\n              </div>\n              :\n              <div className=\"Lyrics Lyrics-DisplayContainer\">\n                {this.lrcFormat() ?\n                  <LRCParser\n                    lyrics = {this.displayLyrics()}\n                    pause = {this.state.pauseSong}\n                  />\n                    :\n                  <span className=\"Lyrics-container\">\n                    {this.displayLyrics()}\n                  </span>\n                }\n              </div>\n            }\n\n          </div>\n\n          <div className=\"Lyrics-lowerSection\">\n            <ReactTypingEffect\n              style={{ marginTop: 20, fontSize: 12, color: '#3F51B5' }}\n              text={this.state.animatedTexts[this.state.count]}\n              speed={150}\n              eraseDelay={150}\n              typingDelay={150}\n            />\n            <Button\n              onClick={()=> this.toggleLrcFixer()}\n            >\n              toggle lyrics\n            </Button>\n          </div>\n\n        </div>\n      )\n    }\n  }\n}\n\nexport default KaraokeDisplay;\n\nfunction randomNumber(min, max){\n  const r = Math.random()*(max-min) + min\n  return Math.floor(r)\n}\n\nfunction cleanLine(string){\n  return string.toLowerCase().replace(\"by rentanadvisercom\", '***')\n}","import React, { Component } from \"react\";\nimport Avatar from '@material-ui/core/Avatar';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Firebase from \"../../firebase/firebase.js\";\nimport MetaTags from 'react-meta-tags';\nimport \"./UploadContent.scss\"\n\nclass UploadContent extends Component {\n\n    state = {\n        albumName: \"\",\n        singer: \"\",\n        title: \"\",\n        lyrics: \"\",\n        videoID: \"\",\n        addressID: \"\",\n        isUploading: false,\n        progress: 0,\n    };\n\n    uploadToFirebase(){\n        //uZ-_HIoEBE8\n        if (this.state.videoID != \"\"){\n            let audioUrl = `https://storage.googleapis.com/africariyoki-4b634.appspot.com/music/${this.state.videoID}.mp3`\n            let lyricsTextUrl = `https://storage.googleapis.com/africariyoki-4b634.appspot.com/lyrics/${this.state.videoID}.txt`\n            let addressID = this.state.addressID\n            if(addressID == ''){\n                addressID = \"http://0.0.0.0:5000\"\n            }else{\n                addressID = \"https://\"+addressID+\".ngrok.io\"\n            }\n\n            Firebase.addAfricariyoki({\n                title: this.state.title,\n                singer: this.state.singer,\n                title: this.state.title,\n                audiourl: audioUrl,\n                lyricsurl: lyricsTextUrl,\n                lyrics: this.state.lyrics,\n                id: this.state.videoID,\n            })\n\n            //use ai to extract vocall from music and upload instrumental\n            var requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n            };\n            fetch(`${addressID}/vr/${this.state.videoID}`, requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"UploadContent\" style={{height: \"100%\"}}>\n                <div style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}>\n                    <MetaTags>\n                        {/* <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\"></meta> */}\n                    </MetaTags>\n                    <div\n                    style={{\n                        width: 320,\n                        padding: 30,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        flexDirection: \"column\"\n                    }}\n                    >\n                    <Avatar style={{ marginBottom: 10 }}>\n                        <MusicNoteIcon />\n                    </Avatar>\n                    <div\n                        style={{\n                        marginBottom: 20,\n                        fontSize: 24,\n                        textAlign: \"center\"\n                        }}\n                    >\n                        {\" \"}\n                        Upload song information\n                        {\" \"}\n                    </div>\n                    <TextField\n                        value={this.state.title}\n                        placeholder=\"Song title\"\n                        onChange={e => {\n                        this.setState({ title: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        value={this.state.singer}\n                        placeholder=\"Singer\"\n                        onChange={e => {\n                        this.setState({ singer: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        value={this.state.albumName}\n                        placeholder=\"Album\"\n                        onChange={e => {\n                        this.setState({ albumName: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        value={this.state.videoID}\n                        placeholder=\"Youtube Video ID\"\n                        onChange={e => {\n                        this.setState({ videoID: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        value={this.state.addressID}\n                        placeholder=\"address ID\"\n                        onChange={e => {\n                            this.setState({ addressID: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        style={{ height: 100}}\n                        value={this.state.lyrics}\n                        placeholder=\"Lyrics - paste lyrics here\"\n                        multiline\n                        rows={4}\n                        onChange={e => {\n                        this.setState({ lyrics: e.target.value });\n                        }}\n                    />\n                    <Button\n                        style={{ marginTop: 20, width: 200 }}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => {\n                            this.uploadToFirebase()\n                        }}\n                    >\n                    Upload\n                    </Button>\n                    {this.state.wrongCred && (\n                        <div style={{ color: \"red\" }}>{this.state.SignUpErrorMsg}</div>\n                    )}\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default UploadContent;\n\n\n//https://material-ui.com/components/material-icons/#material-icons","import React, { Component } from 'react';\nimport Header from '../components/header/Header';\nimport Searcher from '../components/searcher/Searcher.js';\nimport KaraokeDisplay from '../components/karaokedisplay/KaraokeDisplay.js'\nimport UploadContent from '../components/uploadcontent/UploadContent.js'\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"App-body\">\n          <div className=\"content\">\n            <Switch>\n              <Route path=\"/africariyoki\" exact component={Searcher} />\n              <Route path=\"/africariyoki/karaokedisplay/:id\" exact component={KaraokeDisplay} />\n              <Route path=\"/africariyoki/upload\" exact component={UploadContent} />\n              <Route\n                component={() => (\n                  <div style={{ padding: 20 }}>Page not found</div>\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const firebaseConfig = {\n  apiKey: \"AIzaSyCIg3Xc3yYNYgXL90XXwaW2cyMafnvusYE\",\n  authDomain: \"africariyoki-4b634.firebaseapp.com\",\n  databaseURL: \"https://africariyoki-4b634-default-rtdb.firebaseio.com\",\n  projectId: \"africariyoki-4b634\",\n  storageBucket: \"africariyoki-4b634.appspot.com\",\n  messagingSenderId: \"171492275085\",\n  appId: \"1:171492275085:web:f2c1364b0feee41e1083c4\",\n  measurementId: \"G-TSPVJ130EK\"\n};\n\nexport default firebaseConfig","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/pure-min.css';\nimport './assets/css/index.css';\nimport App from './containers/App';\nimport firebase from \"firebase\";\nimport config from './firebase/config.js';\nimport { BrowserRouter } from \"react-router-dom\";\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(config);\n}\n\nlet app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}