{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/jdavid/Documents/africariyoki/src/components/lrcFixer/LRCFixer.js\";\nimport React, { Component } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Firebase from \"../../firebase/firebase.js\";\nimport \"./LRCFixer.css\";\nvar player;\n\nvar LRCFixer = function (_Component) {\n  _inherits(LRCFixer, _Component);\n\n  function LRCFixer(props) {\n    var _this;\n\n    _classCallCheck(this, LRCFixer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LRCFixer).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        lyrics: event.target.value\n      }, function () {\n        _this.prepareLyricsForFixing();\n      });\n    };\n\n    _this.prepareLyricsForFixing = function () {\n      var lyrics = _this.state.lyrics;\n      var timeStampRegex = /\\d\\d:\\d\\d.\\d\\d/gm;\n      lyrics = lyrics.replace(timeStampRegex, '').replace(/[^\\w\\s]/gi, '');\n\n      _this.setState({\n        lyrics: lyrics\n      }, function () {\n        var lyricsArray = lyrics.split(\"\\n\");\n        var lyricsArrayClean = [];\n\n        for (var i = 0; i < lyricsArray.length; i++) {\n          if (lyricsArray[i] != \" \") {\n            lyricsArrayClean.push(lyricsArray[i].trim());\n          }\n        }\n\n        _this.setState({\n          lyricsArrayClean: lyricsArrayClean\n        });\n      });\n    };\n\n    _this.state = {\n      songId: props.songId,\n      lyrics: props.lyrics,\n      lyricsArrayClean: [],\n      noTimeStamp: 0\n    };\n    return _this;\n  }\n\n  _createClass(LRCFixer, [{\n    key: \"updateLyrics\",\n    value: function updateLyrics() {\n      var userPreference;\n\n      if (confirm(\"are you sure?\") == true) {\n        userPreference = \"saving lrc to firebase...\";\n        Firebase.updateLyrics(this.state.songId, this.state.lyrics);\n      } else {\n        userPreference = \"save cancelled!\";\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      loadScript(this.state.songId);\n      this.prepareLyricsForFixing();\n    }\n  }, {\n    key: \"timeStamp\",\n    value: function timeStamp() {\n      var _this2 = this;\n\n      this.setState({\n        noTimeStamp: this.state.noTimeStamp + 1\n      }, function () {\n        var lyricsArrayClean = _this2.state.lyricsArrayClean;\n        var lyricLine = lyricsArrayClean[_this2.state.noTimeStamp - 1];\n        lyricLine = \"[\" + formatTime(player.getCurrentTime()) + \"]\" + lyricLine;\n        lyricsArrayClean[_this2.state.noTimeStamp - 1] = lyricLine;\n\n        _this2.setState({\n          lyricsArrayClean: lyricsArrayClean,\n          lyrics: lyricsArrayClean.join(\" \\n\")\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"LRCFixer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, React.createElement(\"div\", {\n        id: \"video-placeholder\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      }), React.createElement(\"textarea\", {\n        className: \"Lyrics-container\",\n        onChange: this.handleChange,\n        value: this.state.lyrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.timeStamp();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      }, \"time stamp!\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.updateLyrics();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        }\n      }, \"update lyrics\")));\n    }\n  }]);\n\n  return LRCFixer;\n}(Component);\n\nfunction onYouTubeIframeAPIReady(songId) {\n  player = new YT.Player('video-placeholder', {\n    width: 600,\n    height: 100,\n    videoId: songId,\n    playerVars: {\n      color: 'white'\n    }\n  });\n}\n\nfunction formatTime(time) {\n  time = Math.round(time);\n  var minutes = Math.floor(time / 60),\n      seconds = time - minutes * 60;\n  seconds = seconds < 10 ? '0' + seconds : seconds;\n  return \"0\" + minutes + \":\" + seconds + \".00\";\n}\n\nfunction loadScript(songId) {\n  if (typeof YT == 'undefined' || typeof YT.Player == 'undefined') {\n    var tag = document.createElement('script');\n    tag.src = \"https://www.youtube.com/iframe_api\";\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  }\n\n  setTimeout(function () {\n    onYouTubeIframeAPIReady(songId);\n  }, 1000);\n}\n\nexport default LRCFixer;","map":{"version":3,"sources":["/Users/jdavid/Documents/africariyoki/src/components/lrcFixer/LRCFixer.js"],"names":["React","Component","Button","Firebase","player","LRCFixer","props","handleChange","event","setState","lyrics","target","value","prepareLyricsForFixing","state","timeStampRegex","replace","lyricsArray","split","lyricsArrayClean","i","length","push","trim","songId","noTimeStamp","userPreference","confirm","updateLyrics","loadScript","lyricLine","formatTime","getCurrentTime","join","width","timeStamp","onYouTubeIframeAPIReady","YT","Player","height","videoId","playerVars","color","time","Math","round","minutes","floor","seconds","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Firebase from \"../../firebase/firebase.js\";\n\nimport './LRCFixer.css';\n\nvar player;\n\nclass LRCFixer extends Component {\n  constructor(props){\n    super(props);\n    this.state= {\n        songId: props.songId,\n        lyrics: props.lyrics,\n        lyricsArrayClean: [],\n        noTimeStamp: 0,\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n        lyrics: event.target.value\n    }, ()=>{\n      this.prepareLyricsForFixing()\n    });\n  }\n\n  updateLyrics(){\n    var userPreference;\n\n    if (confirm(\"are you sure?\") == true) {\n        userPreference = \"saving lrc to firebase...\";\n        Firebase.updateLyrics(this.state.songId, this.state.lyrics)\n    } else {\n        userPreference = \"save cancelled!\";\n    }\n  }\n\n  prepareLyricsForFixing = () => {\n    let lyrics = this.state.lyrics\n    let timeStampRegex = /\\d\\d:\\d\\d.\\d\\d/gm\n    lyrics = lyrics.replace(timeStampRegex, '').replace(/[^\\w\\s]/gi, '')\n    this.setState({lyrics: lyrics},\n      () =>{\n        let lyricsArray = lyrics.split(\"\\n\")\n        let lyricsArrayClean = []\n        for (var i = 0; i < lyricsArray.length; i++) {\n          if (lyricsArray[i] != \" \"){\n            lyricsArrayClean.push(lyricsArray[i].trim())\n          }\n        }\n        this.setState({lyricsArrayClean: lyricsArrayClean})\n      })\n  }\n\n  componentDidMount(){\n    loadScript(this.state.songId)\n    this.prepareLyricsForFixing()\n  }\n\n  timeStamp(){\n    this.setState({noTimeStamp: this.state.noTimeStamp + 1},\n    () => {\n      let lyricsArrayClean = this.state.lyricsArrayClean\n      let lyricLine = lyricsArrayClean[this.state.noTimeStamp-1]\n      lyricLine = `[${formatTime( player.getCurrentTime())}]${lyricLine}`\n      lyricsArrayClean[this.state.noTimeStamp-1] = lyricLine\n      this.setState({lyricsArrayClean: lyricsArrayClean, lyrics: lyricsArrayClean.join(\" \\n\")})\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"LRCFixer\">\n        <div id=\"video-placeholder\" style={{width: \"100%\"}}></div>\n        <textarea\n          className=\"Lyrics-container\"\n          onChange={this.handleChange}\n          value={this.state.lyrics}\n        />\n        <div>\n          <Button\n            onClick={()=> this.timeStamp()}\n          >\n            time stamp!\n          </Button>\n\n          <Button\n            onClick={()=> this.updateLyrics()}\n          >\n            update lyrics\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction onYouTubeIframeAPIReady(songId){\n\n  player = new YT.Player('video-placeholder', {\n      width: 600,\n      height: 100,\n      videoId: songId,\n      playerVars: {\n          color: 'white',\n      },\n  });\n}\n\nfunction formatTime(time){\n  time = Math.round(time);\n\n  var minutes = Math.floor(time / 60),\n  seconds = time - minutes * 60;\n\n  seconds = seconds < 10 ? '0' + seconds : seconds;\n\n  return \"0\" + minutes + \":\" + seconds + \".00\";\n}\n\nfunction loadScript(songId){\n  if (typeof(YT) == 'undefined' || typeof(YT.Player) == 'undefined') {\n      var tag = document.createElement('script');\n      tag.src = \"https://www.youtube.com/iframe_api\";\n      var firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  }\n\n  setTimeout(() => {   onYouTubeIframeAPIReady(songId) }, 1000);\n\n}\n\nexport default LRCFixer;\n"]},"metadata":{},"sourceType":"module"}