{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/jdavid/Documents/africariyoki/src/components/searcher/Searcher.js\";\nimport React, { Component } from 'react';\nimport SongList from \"../songLIst/SongList\";\nimport Firebase from \"../../firebase/firebase.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ReactTypingEffect from 'react-typing-effect';\nimport background1 from \"./assets/ankarabck1.jpeg\";\nimport background2 from \"./assets/ankarabck2.jpeg\";\nimport background3 from \"./assets/ankarabck3.jpeg\";\nimport background4 from \"./assets/ankarabck4.jpeg\";\nimport background5 from \"./assets/ankarabck5.jpeg\";\nimport background6 from \"./assets/ankarabck6.jpeg\";\nimport background7 from \"./assets/ankarabck7.jpeg\";\nimport background8 from \"./assets/ankarabck8.jpeg\";\nimport background9 from \"./assets/ankarabck9.jpeg\";\nimport background10 from \"./assets/ankarabck10.jpeg\";\nimport background11 from \"./assets/ankarabck11.jpeg\";\nimport \"./Searcher.css\";\n\nvar Searcher = function (_Component) {\n  _inherits(Searcher, _Component);\n\n  function Searcher(props) {\n    var _this;\n\n    _classCallCheck(this, Searcher);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Searcher).call(this, props));\n\n    _this.filterSong = function (song) {\n      if (!_this.state.expandResults) {\n        _this.setState({\n          expandResults: true\n        });\n      }\n\n      if (song == \"\") {\n        _this.setState({\n          expandResults: false\n        });\n      }\n\n      var typeSong = _this.state.songsCopy.filter(function (thisSong) {\n        return thisSong.title.replace(' ', '').toLowerCase().includes(song.replace(' ', '').toLowerCase()) || thisSong.singer.replace(' ', '').toLowerCase().includes(song.replace(' ', '').toLowerCase());\n      });\n\n      if (song == '') {\n        _this.setState({\n          songs: _this.state.songsCopy\n        });\n      } else {\n        if (typeSong.length > 0) {}\n\n        _this.setState({\n          filteredSongs: typeSong\n        });\n      }\n    };\n\n    _this.playSong = function (songId) {\n      var chooseSong = _this.state.songs.filter(function (song) {\n        return songId === song.id;\n      });\n\n      _this.props.history.push({\n        pathname: \"/africariyoki/karaokedisplay/\" + songId,\n        state: {\n          chooseSong: chooseSong,\n          songs: _this.state.songsCopy\n        }\n      });\n\n      _this.setState({\n        songs: chooseSong,\n        currentSong: chooseSong\n      });\n    };\n\n    _this.state = {\n      songs: [],\n      filteredSongs: [],\n      currentSong: '',\n      songsCopy: [],\n      searchOptions: [],\n      typingEffectSongs: [''],\n      count: 0,\n      query: '',\n      expandResults: false,\n      background: getRandomBackground()\n    };\n    _this.searchTerm = '';\n    return _this;\n  }\n\n  _createClass(Searcher, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Firebase.getLyrics().then(function (val) {\n        console.log(val);\n        var shuffledSongs = shuffleArray(val.map(function (a) {\n          return a.title;\n        }));\n\n        _this2.setState({\n          songs: val,\n          songsCopy: val,\n          searchOptions: shuffledSongs,\n          typingEffectSongs: shuffledSongs,\n          songIds: val.map(function (a) {\n            return a.id;\n          })\n        });\n      });\n      setInterval(function () {\n        _this2.setState({\n          count: (_this2.state.count + 1) % 20\n        });\n      }, 6000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Searcher\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundImage: \"url(\" + this.state.background + \")\"\n        },\n        className: \"Searcher-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        }\n      }, React.createElement(\"div\", {\n        className: \"Searcher-backgroundOverlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      })), React.createElement(\"div\", {\n        className: \"Searcher-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }, React.createElement(\"div\", {\n        className: \"Searcher-inputWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }, React.createElement(TextField, {\n        className: \"Searcher-input\",\n        label: \"what do you want to sing today??\",\n        variant: \"outlined\",\n        onChange: function onChange(event) {\n          _this3.setState({\n            query: event.target.value\n          }, function () {\n            _this3.filterSong(_this3.state.query);\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        }\n      })), React.createElement(SongList, {\n        songs: this.state.songs,\n        filteredSongs: this.state.filteredSongs,\n        playSong: this.playSong,\n        expandResults: this.state.expandResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        }\n      }), React.createElement(\"div\", {\n        className: \"Searcher-typeEffectWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        }\n      }, React.createElement(ReactTypingEffect, {\n        style: {\n          marginTop: 50,\n          fontSize: 12,\n          color: '#3F51B5'\n        },\n        text: this.state.typingEffectSongs.slice(0, 20)[this.state.count],\n        speed: 150,\n        eraseDelay: 150,\n        typingDelay: 150,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        }\n      }))));\n    }\n  }]);\n\n  return Searcher;\n}(Component);\n\nexport default Searcher;\n\nfunction getRandomBackground() {\n  var randomNumber = Math.floor(Math.random() * 10);\n\n  switch (randomNumber) {\n    case 1:\n      return background1;\n\n    case 2:\n      return background2;\n\n    case 3:\n      return background3;\n\n    case 4:\n      return background4;\n\n    case 5:\n      return background5;\n\n    case 6:\n      return background6;\n\n    case 7:\n      return background7;\n\n    case 8:\n      return background8;\n\n    case 9:\n      return background9;\n\n    case 10:\n      return background10;\n\n    default:\n      return background11;\n  }\n}\n\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}","map":{"version":3,"sources":["/Users/jdavid/Documents/africariyoki/src/components/searcher/Searcher.js"],"names":["React","Component","SongList","Firebase","TextField","ReactTypingEffect","background1","background2","background3","background4","background5","background6","background7","background8","background9","background10","background11","Searcher","props","filterSong","song","state","expandResults","setState","typeSong","songsCopy","filter","thisSong","title","replace","toLowerCase","includes","singer","songs","length","filteredSongs","playSong","songId","chooseSong","id","history","push","pathname","currentSong","searchOptions","typingEffectSongs","count","query","background","getRandomBackground","searchTerm","getLyrics","then","val","console","log","shuffledSongs","shuffleArray","map","a","songIds","setInterval","backgroundImage","event","target","value","marginTop","fontSize","color","slice","randomNumber","Math","floor","random","array","i","j"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SongList from '../songLIst/SongList';\nimport Firebase from \"../../firebase/firebase.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ReactTypingEffect from 'react-typing-effect';\nimport background1 from \"./assets/ankarabck1.jpeg\";\nimport background2 from \"./assets/ankarabck2.jpeg\";\nimport background3 from \"./assets/ankarabck3.jpeg\";\nimport background4 from \"./assets/ankarabck4.jpeg\";\nimport background5 from \"./assets/ankarabck5.jpeg\";\nimport background6 from \"./assets/ankarabck6.jpeg\";\nimport background7 from \"./assets/ankarabck7.jpeg\";\nimport background8 from \"./assets/ankarabck8.jpeg\";\nimport background9 from \"./assets/ankarabck9.jpeg\";\nimport background10 from \"./assets/ankarabck10.jpeg\";\nimport background11 from \"./assets/ankarabck11.jpeg\";\n\nimport './Searcher.css';\n\nclass Searcher extends Component {\n  constructor(props){\n    super(props);\n\n    this.state= {\n      songs: [],\n      filteredSongs: [],\n      currentSong: '',\n      songsCopy:[],\n      searchOptions: [],\n      typingEffectSongs: [''],\n      count:0,\n      query: '',\n      expandResults: false,\n      background: getRandomBackground(),\n    }\n\n    this.searchTerm=''\n  }\n\n  componentDidMount () {\n    Firebase.getLyrics().then(\n      val => {\n        console.log(val)\n        let shuffledSongs = shuffleArray(val.map(a => a.title))\n        this.setState({\n          songs: val,\n          songsCopy: val,\n          searchOptions: shuffledSongs,\n          typingEffectSongs: shuffledSongs,\n          songIds: val.map(a => a.id),\n        })\n      }\n    )\n\n    setInterval( () => {\n      this.setState({\n        count: (this.state.count+1) % 20,\n      })\n    }, 6000);\n  }\n\n  filterSong = (song) => {\n    if (!this.state.expandResults){\n      this.setState({expandResults: true})\n    }\n\n    if (song==\"\"){\n      this.setState({expandResults: false})\n    }\n\n    let typeSong = this.state.songsCopy.filter(thisSong =>\n      thisSong.title.replace(' ', '').toLowerCase().includes(song.replace(' ', '').toLowerCase()) ||\n      thisSong.singer.replace(' ', '').toLowerCase().includes(song.replace(' ', '').toLowerCase())\n    )\n\n\n    if (song == ''){\n      this.setState({\n        songs: this.state.songsCopy\n      })\n    }else{\n\n      if (typeSong.length > 0){\n        //\n      }\n\n      this.setState({\n        filteredSongs: typeSong\n      })\n    }\n  }\n\n  playSong= (songId) => {\n    let chooseSong = this.state.songs.filter(song => songId === song.id)\n\n    this.props.history.push({\n      pathname: \"/africariyoki/karaokedisplay/\" + songId,\n      state: { chooseSong: chooseSong, songs: this.state.songsCopy}\n    });\n\n    this.setState({\n      songs: chooseSong,\n      currentSong: chooseSong\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"Searcher\">\n        <div style={{ backgroundImage: `url(${this.state.background})` }}\n        className=\"Searcher-background\">\n          <div className=\"Searcher-backgroundOverlay\">\n\n          </div>\n        </div>\n        <div className=\"Searcher-container\">\n\n          <div className=\"Searcher-inputWrapper\">\n            <TextField\n              className=\"Searcher-input\"\n              label=\"what do you want to sing today??\"\n              variant=\"outlined\"\n              onChange={event=>{\n                this.setState({query: event.target.value}, ()=> {\n                  this.filterSong(this.state.query)\n                })\n              }}\n            />\n          </div>\n\n          <SongList\n            songs={this.state.songs}\n            filteredSongs={this.state.filteredSongs}\n            playSong={this.playSong}\n            expandResults={this.state.expandResults}\n          />\n\n          <div className=\"Searcher-typeEffectWrapper\">\n            <ReactTypingEffect\n              style={{ marginTop: 50, fontSize: 12, color: '#3F51B5' }}\n              text={this.state.typingEffectSongs.slice(0, 20)[this.state.count]}\n              speed={150}\n              eraseDelay={150}\n              typingDelay={150}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Searcher;\n\nfunction getRandomBackground(){\n  let randomNumber =  Math.floor(Math.random() * 10);\n\n  switch(randomNumber) {\n    case 1:\n      return background1\n    case 2:\n      return background2\n    case 3:\n      return background3\n    case 4:\n      return background4\n    case 5:\n      return background5\n    case 6:\n      return background6\n    case 7:\n      return background7\n    case 8:\n      return background8\n    case 9:\n      return background9\n    case 10:\n      return background10\n    default:\n      return background11\n  }\n}\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array\n}\n\n//https://www.lalal.ai/?gclid=CjwKCAiArbv_BRA8EiwAYGs23LTomkIzDCGjHTkK-SQlhargxYyajraHsgux9WClyYvOXJnLQ7surhoCNbIQAvD_BwE\n//https://mp3downy.com/MP3-converter?apikey=1234567890\n\n//do  ./ngrok http 5000 in /vocalremover to run ngrok\n\n\n//for free images https://www.pexels.com/search/nigeira/"]},"metadata":{},"sourceType":"module"}