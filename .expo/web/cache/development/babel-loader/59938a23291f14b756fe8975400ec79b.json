{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as CONSTANTS from \"./Constants\";\nvar initialState = {\n  showCartDialog: false,\n  showMenu: true,\n  checkedOutItems: [],\n  loggedInUser: null,\n  someoneLoggedIn: false\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONSTANTS.SHOW_CART_DLG:\n      return _objectSpread({}, state, {\n        showCartDialog: action.payload\n      });\n\n    case CONSTANTS.TOGGLE_MENU:\n      return _objectSpread({}, state, {\n        showMenu: !state.showMenu\n      });\n\n    case CONSTANTS.SET_LOGGED_IN_USER:\n      return _objectSpread({}, state, {\n        loggedInUser: action.payload,\n        someoneLoggedIn: true\n      });\n\n    case CONSTANTS.LOGOUT:\n      return _objectSpread({}, state, {\n        loggedInUser: null,\n        checkedOutItems: [],\n        someoneLoggedIn: false\n      });\n\n    case CONSTANTS.SET_CHECKEDOUT_ITEMS:\n      return _objectSpread({}, state, {\n        checkedOutItems: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/jdavid/Documents/africariyoki/src/Redux/Reducer.js"],"names":["CONSTANTS","initialState","showCartDialog","showMenu","checkedOutItems","loggedInUser","someoneLoggedIn","rootReducer","state","action","type","SHOW_CART_DLG","payload","TOGGLE_MENU","SET_LOGGED_IN_USER","LOGOUT","SET_CHECKEDOUT_ITEMS"],"mappings":";;;;;;AAAA,OAAO,KAAKA,SAAZ;AAGA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,KADG;AAEnBC,EAAAA,QAAQ,EAAE,IAFS;AAGnBC,EAAAA,eAAe,EAAE,EAHE;AAInBC,EAAAA,YAAY,EAAE,IAJK;AAKnBC,EAAAA,eAAe,EAAE;AALE,CAArB;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,SAAS,CAACW,aAAf;AACE,+BAAYH,KAAZ;AAAmBN,QAAAA,cAAc,EAAEO,MAAM,CAACG;AAA1C;;AACF,SAAKZ,SAAS,CAACa,WAAf;AACE,+BAAYL,KAAZ;AAAmBL,QAAAA,QAAQ,EAAE,CAACK,KAAK,CAACL;AAApC;;AACF,SAAKH,SAAS,CAACc,kBAAf;AACE,+BAAYN,KAAZ;AAAmBH,QAAAA,YAAY,EAAEI,MAAM,CAACG,OAAxC;AAAiDN,QAAAA,eAAe,EAAE;AAAlE;;AACF,SAAKN,SAAS,CAACe,MAAf;AACE,+BAAYP,KAAZ;AAAmBH,QAAAA,YAAY,EAAE,IAAjC;AAAuCD,QAAAA,eAAe,EAAE,EAAxD;AAA4DE,QAAAA,eAAe,EAAE;AAA7E;;AACF,SAAKN,SAAS,CAACgB,oBAAf;AACE,+BAAYR,KAAZ;AAAmBJ,QAAAA,eAAe,EAAEK,MAAM,CAACG;AAA3C;;AACF;AACE,aAAOJ,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["import * as CONSTANTS from \"./Constants\";\n\n// If multiple components need access to some data, in that case we store such data in redux.\nconst initialState = {\n  showCartDialog: false,\n  showMenu: true,\n  checkedOutItems: [],\n  loggedInUser: null,\n  someoneLoggedIn: false,\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SHOW_CART_DLG:\n      return { ...state, showCartDialog: action.payload };\n    case CONSTANTS.TOGGLE_MENU:\n      return { ...state, showMenu: !state.showMenu };\n    case CONSTANTS.SET_LOGGED_IN_USER:\n      return { ...state, loggedInUser: action.payload, someoneLoggedIn: true };\n    case CONSTANTS.LOGOUT:\n      return { ...state, loggedInUser: null, checkedOutItems: [], someoneLoggedIn: false };\n    case CONSTANTS.SET_CHECKEDOUT_ITEMS:\n      return { ...state, checkedOutItems: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}