{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/jdavid/Documents/africariyoki/src/components/karaokedisplay/KaraokeDisplay.js\";\nimport React, { Component } from 'react';\nimport ReactTypingEffect from 'react-typing-effect';\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport LRCParser from \"../lrcParser/LRCParser\";\nimport Button from \"@material-ui/core/Button\";\nimport LRCFixer from \"../lrcFixer/LRCFixer\";\nimport Clouds from \"../clouds/Clouds\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { withRouter } from \"react-router-dom\";\nimport 'react-h5-audio-player/lib/styles.css';\nimport \"./KaraokeDisplay.css\";\n\nvar ConnectedKaraokeDisplay = function (_Component) {\n  _inherits(ConnectedKaraokeDisplay, _Component);\n\n  function ConnectedKaraokeDisplay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ConnectedKaraokeDisplay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConnectedKaraokeDisplay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      singer: _this.props.location.state.chooseSong[0],\n      animatedTexts: [_this.props.location.state.chooseSong[0].title, _this.props.location.state.chooseSong[0].singer, _this.props.location.state.chooseSong[0].album],\n      showTimer: false,\n      count: 0,\n      eventDate: moment.duration().add({\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 5\n      }),\n      secs: 0,\n      pauseSong: false,\n      lrcFixer: false\n    };\n\n    _this.updateTimer = function () {\n      var x = setInterval(function () {\n        var eventDate = _this.state.eventDate;\n\n        if (eventDate <= 0) {\n          var randomSongIndex = randomNumber(0, _this.props.location.state.songs.length);\n\n          _this.props.history.push({\n            pathname: \"/africariyoki/karaokedisplay/\" + _this.props.location.state.songs[randomSongIndex].id,\n            state: {\n              chooseSong: [_this.props.location.state.songs[randomSongIndex]],\n              songs: _this.props.location.state.songs\n            }\n          });\n\n          window.location.reload(true);\n          clearInterval(x);\n        } else {\n          eventDate = eventDate.subtract(1, \"s\");\n          var secs = eventDate.seconds();\n\n          _this.setState({\n            secs: secs,\n            eventDate: eventDate,\n            showTimer: true\n          });\n        }\n      }, 1000);\n    };\n\n    _this.playAnotherSong = function () {\n      _this.updateTimer();\n    };\n\n    return _this;\n  }\n\n  _createClass(ConnectedKaraokeDisplay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setInterval(function () {\n                _this2.setState({\n                  count: (_this2.state.count + 1) % 2\n                });\n              }, 5000);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"displayLyrics\",\n    value: function displayLyrics() {\n      var lyrics = this.state.singer.lyrics.replace(\"b\\\"\", '');\n      var newstr = \"\";\n      var prevChar = '';\n\n      for (var i = 0; i < lyrics.length; i++) {\n        if (lyrics[i] == \"\\\\\") {\n          newstr += ' \\n ';\n          prevChar = 't';\n        } else {\n          if (prevChar == 't') {\n            newstr += lyrics[i + 1];\n          } else {\n            newstr += lyrics[i];\n            prevChar = '';\n          }\n        }\n      }\n\n      return cleanLine(newstr);\n    }\n  }, {\n    key: \"lrcFormat\",\n    value: function lrcFormat() {\n      var lyrics = this.state.singer.lyrics;\n      return lyrics.includes(\"[00\");\n    }\n  }, {\n    key: \"toggleLrcFixer\",\n    value: function toggleLrcFixer() {\n      var tenure = prompt(\"Please enter master password\", \"\");\n\n      if (tenure != null && tenure == \"1226\") {\n        if (this.state.lrcFixer) {\n          this.setState({\n            lrcFixer: false\n          });\n        } else {\n          this.setState({\n            lrcFixer: true\n          });\n        }\n      } else {\n        alert(\"sorry, invalid password\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.props) {\n        return React.createElement(\"div\", {\n          className: \"KaraokeDisplay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          }\n        }, React.createElement(\"div\", {\n          className: \"KaraokeDisplay-cloudBackground\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          }\n        }, React.createElement(Clouds, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          }\n        }), React.createElement(\"div\", {\n          className: \"KaraokeDisplay-stars\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          }\n        })), React.createElement(\"div\", {\n          className: \"KaraokeDisplay-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          }\n        }, !this.state.lrcFixer && React.createElement(AudioPlayer, {\n          autoPlay: true,\n          src: this.state.singer.audiourl.includes('africariyoki-4b634') ? this.state.singer.audiourl : this.state.singer.audiourl.replace('africariyoki', 'africariyoki-4b634'),\n          autoPlay: true,\n          controls: true,\n          controlsList: \"nodownload\",\n          className: \"KaraokeDisplay-audio\",\n          onEnded: this.playAnotherSong,\n          onPause: function onPause() {\n            _this3.setState({\n              pauseSong: true\n            });\n          },\n          onPlay: function onPlay() {\n            _this3.setState({\n              pauseSong: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        }), this.state.showTimer && React.createElement(\"div\", {\n          className: \"KaraokeDisplay-showTimer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          }\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          }\n        }, \"Playing next song in... \", \" \" + this.state.secs, \" secs\")), React.createElement(\"h2\", {\n          style: {\n            marginTop: 20,\n            fontSize: 24,\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          }\n        }, this.state.singer.title, \" by \", this.state.singer.singer), this.state.lrcFixer ? React.createElement(\"div\", {\n          className: \"Lyrics Lyrics-LRCFixercontainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          }\n        }, React.createElement(LRCFixer, {\n          lyrics: this.displayLyrics(),\n          songId: this.state.singer.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          }\n        })) : React.createElement(\"div\", {\n          className: \"Lyrics Lyrics-DisplayContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          }\n        }, this.lrcFormat() ? React.createElement(LRCParser, {\n          lyrics: this.displayLyrics(),\n          pause: this.state.pauseSong,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          }\n        }) : React.createElement(\"span\", {\n          className: \"Lyrics-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          }\n        }, this.displayLyrics())), React.createElement(\"div\", {\n          className: \"Lyrics-lowerSection\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          }\n        }, React.createElement(ReactTypingEffect, {\n          style: {\n            marginTop: 20,\n            fontSize: 12,\n            color: '#3F51B5'\n          },\n          text: this.state.animatedTexts[this.state.count],\n          speed: 150,\n          eraseDelay: 150,\n          typingDelay: 150,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          }\n        }), React.createElement(Button, {\n          onClick: function onClick() {\n            return _this3.toggleLrcFixer();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          }\n        }, \"toggle lyrics\"))));\n      }\n    }\n  }]);\n\n  return ConnectedKaraokeDisplay;\n}(Component);\n\nfunction randomNumber(min, max) {\n  var r = Math.random() * (max - min) + min;\n  return Math.floor(r);\n}\n\nfunction cleanLine(string) {\n  return string.toLowerCase().replace(\"by rentanadvisercom\", '***');\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loggedInUser: state.loggedInUser\n  };\n};\n\nvar KaraokeDisplay = withRouter(connect(mapStateToProps)(ConnectedKaraokeDisplay));\nexport default withRouter(KaraokeDisplay);","map":{"version":3,"sources":["/Users/jdavid/Documents/africariyoki/src/components/karaokedisplay/KaraokeDisplay.js"],"names":["React","Component","ReactTypingEffect","connect","moment","LRCParser","Button","LRCFixer","Clouds","AudioPlayer","withRouter","ConnectedKaraokeDisplay","state","singer","props","location","chooseSong","animatedTexts","title","album","showTimer","count","eventDate","duration","add","days","hours","minutes","seconds","secs","pauseSong","lrcFixer","updateTimer","x","setInterval","randomSongIndex","randomNumber","songs","length","history","push","pathname","id","window","reload","clearInterval","subtract","setState","playAnotherSong","lyrics","replace","newstr","prevChar","i","cleanLine","includes","tenure","prompt","alert","audiourl","marginTop","fontSize","color","displayLyrics","lrcFormat","toggleLrcFixer","min","max","r","Math","random","floor","string","toLowerCase","mapStateToProps","loggedInUser","KaraokeDisplay"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactTypingEffect from 'react-typing-effect';\nimport { connect } from \"react-redux\";\nimport moment from \"moment\"\nimport LRCParser from '../lrcParser/LRCParser';\nimport Button from \"@material-ui/core/Button\";\nimport LRCFixer from '../lrcFixer/LRCFixer';\nimport Clouds from '../clouds/Clouds'\n\nimport AudioPlayer from 'react-h5-audio-player';\nimport { withRouter } from \"react-router-dom\";\n\nimport 'react-h5-audio-player/lib/styles.css';\n\nimport \"./KaraokeDisplay.css\";\n\nclass ConnectedKaraokeDisplay extends Component {\n  state={\n    singer: this.props.location.state.chooseSong[0],\n    animatedTexts: [\n      this.props.location.state.chooseSong[0].title,\n      this.props.location.state.chooseSong[0].singer,\n      this.props.location.state.chooseSong[0].album,\n    ],\n    showTimer: false,\n    count:0,\n    eventDate: moment.duration().add({days:0,hours:0,minutes:0,seconds:5}), // add 9 full days, 3 hours, 40 minutes and 50 seconds\n    secs:0,\n    pauseSong: false,\n    lrcFixer: false,\n  }\n\n  updateTimer=()=>{\n    const x = setInterval(()=>{\n      let { eventDate } = this.state\n\n      if(eventDate <=0){\n        let randomSongIndex = randomNumber(0, this.props.location.state.songs.length)\n\n        this.props.history.push({\n          pathname: \"/africariyoki/karaokedisplay/\" + this.props.location.state.songs[randomSongIndex].id,\n          state: { chooseSong: [this.props.location.state.songs[randomSongIndex]], songs: this.props.location.state.songs}\n        });\n        window.location.reload(true);\n        clearInterval(x)\n      }else {\n        eventDate = eventDate.subtract(1,\"s\")\n        const secs = eventDate.seconds()\n\n        this.setState({\n          secs,\n          eventDate,\n          showTimer: true\n        })\n      }\n    },1000)\n  }\n\n  playAnotherSong = () => {\n    this.updateTimer()\n  }\n\n  async componentDidMount(){\n    setInterval( () => {\n      this.setState({\n        count: (this.state.count+1) % 2\n      })\n    }, 5000);\n  }\n\n  displayLyrics(){\n    let lyrics = this.state.singer.lyrics.replace(\"b\\\"\", '')\n    var newstr = \"\";\n    var prevChar = '';\n\n    for( var i = 0; i < lyrics.length; i++ ){\n      if(lyrics[i] == \"\\\\\"){\n        newstr += ' \\n ';\n        prevChar = 't'\n      }else{\n        if (prevChar == 't'){\n          newstr += lyrics[i+1];\n        }else{\n          newstr += lyrics[i];\n          prevChar = ''\n        }\n      }\n    }\n    return cleanLine(newstr)\n  }\n\n  lrcFormat(){\n    let lyrics = this.state.singer.lyrics\n    return lyrics.includes(\"[00\")\n  }\n\n  toggleLrcFixer(){\n\n    var tenure = prompt(\"Please enter master password\", \"\");\n\n    if (tenure != null && tenure == \"1226\") {\n      if (this.state.lrcFixer) {\n        this.setState({lrcFixer: false})\n      }else{\n        this.setState({lrcFixer: true})\n      }\n    }else{\n      alert(\"sorry, invalid password\")\n    }\n  }\n\n  render() {\n    if (this.props) {\n      return (\n        <div className=\"KaraokeDisplay\">\n          <div className=\"KaraokeDisplay-cloudBackground\">\n            <Clouds/>\n            <div className=\"KaraokeDisplay-stars\"></div>\n          </div>\n\n          <div className=\"KaraokeDisplay-container\">\n            {!this.state.lrcFixer &&\n              <AudioPlayer\n                autoPlay\n                src={this.state.singer.audiourl.includes('africariyoki-4b634') ? this.state.singer.audiourl : this.state.singer.audiourl.replace('africariyoki', 'africariyoki-4b634')} //because im cheap and im not paying for firebase\n                autoPlay\n                controls\n                controlsList=\"nodownload\"\n                className={\"KaraokeDisplay-audio\"}\n                onEnded={this.playAnotherSong}\n                onPause={ () => {this.setState({pauseSong: true})}}\n                onPlay = {() => {this.setState({pauseSong: false})}}\n              />\n            }\n\n            {this.state.showTimer &&\n              <div className=\"KaraokeDisplay-showTimer\">\n                <span>Playing next song in... {` ${this.state.secs}`} secs</span>\n              </div>\n            }\n\n            <h2 style={{ marginTop: 20, fontSize: 24, color: 'white'}}>\n              {this.state.singer.title} by {this.state.singer.singer}\n            </h2>\n\n            {this.state.lrcFixer ?\n                <div className=\"Lyrics Lyrics-LRCFixercontainer\">\n                  <LRCFixer\n                    lyrics={this.displayLyrics()}\n                    songId={this.state.singer.id}\n                  />\n                </div>\n                :\n                <div className=\"Lyrics Lyrics-DisplayContainer\">\n                  {this.lrcFormat() ?\n                    <LRCParser\n                      lyrics = {this.displayLyrics()}\n                      pause = {this.state.pauseSong}\n                    />\n                      :\n                    <span className=\"Lyrics-container\">\n                      {this.displayLyrics()}\n                    </span>\n                  }\n                </div>\n            }\n\n            <div className=\"Lyrics-lowerSection\">\n              <ReactTypingEffect\n                style={{ marginTop: 20, fontSize: 12, color: '#3F51B5' }}\n                text={this.state.animatedTexts[this.state.count]}\n                speed={150}\n                eraseDelay={150}\n                typingDelay={150}\n              />\n              <Button\n                onClick={()=> this.toggleLrcFixer()}\n              >\n                toggle lyrics\n              </Button>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\n\nfunction randomNumber(min, max){\n  const r = Math.random()*(max-min) + min\n  return Math.floor(r)\n}\n\nfunction cleanLine(string){\n  return string.toLowerCase().replace(\"by rentanadvisercom\", '***')\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n  };\n};\n\nlet KaraokeDisplay = withRouter(connect(mapStateToProps)(ConnectedKaraokeDisplay));\nexport default withRouter(KaraokeDisplay);"]},"metadata":{},"sourceType":"module"}