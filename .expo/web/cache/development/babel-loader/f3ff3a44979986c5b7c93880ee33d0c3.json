{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport firebase from \"firebase\";\n\nvar Firebase = function Firebase() {\n  _classCallCheck(this, Firebase);\n\n  this.getLyrics = function () {\n    return new Promise(function (resolve) {\n      firebase.database().ref('/lyrics/').once('value').then(function (snapshot) {\n        if (snapshot.val()) {\n          resolve(Object.values(snapshot.val()));\n        } else {\n          resolve({});\n        }\n      });\n    });\n  };\n\n  this.storage = function () {\n    return firebase.storage();\n  };\n\n  this.deleteRecp = function (userId, recipientID) {\n    return new Promise(function (resolve) {\n      firebase.database().ref('/recipients/' + userId).child(recipientID).remove().then(function () {\n        resolve(true);\n      });\n    });\n  };\n\n  this.addAfricariyoki = function (item) {\n    return new Promise(function (resolve) {\n      firebase.database().ref('/lyrics/' + item.id + '/').set({\n        id: item.id,\n        title: item.title,\n        lyricsurl: item.lyricsurl,\n        singer: item.singer,\n        audiourl: item.audiourl,\n        lyrics: item.lyrics,\n        title: item.title\n      }).then(function (response) {\n        resolve(true);\n      }).catch(function (error) {\n        console.warn(\"error\", error);\n      });\n    });\n  };\n\n  this.updateLyrics = function (songId, lyrics) {\n    return new Promise(function (resolve) {\n      firebase.database().ref('/lyrics/' + songId + '/').update({\n        lyrics: lyrics\n      }).then(function (response) {\n        console.log(\"reposne\", response);\n        resolve(true);\n      }).catch(function (error) {\n        console.log(\"error\", error);\n      });\n    });\n  };\n\n  this.postTransaction = function (userInfo, recpInfo, cardInfo, transInfo) {\n    return new Promise(function (resolve) {\n      firebase.database().ref('/userTransactions/' + userInfo.user.uid + '/' + transInfo.id + '/').set({\n        transactionId: transInfo.id,\n        accountNumber: recpInfo.accountNumber,\n        bankName: recpInfo.bankName,\n        recpFirstName: recpInfo.firstName,\n        recpLastName: recpInfo.lastName,\n        cardUsed: cardInfo.number,\n        recpAmt: transInfo.recpAmt,\n        sendAmt: transInfo.sendAmt,\n        recpCurrency: transInfo.recpCurrency,\n        sendCurrency: transInfo.sendCurrency,\n        rate: transInfo.rate,\n        isSuccessful: true,\n        time: '13:03'\n      }).then(function (response) {\n        resolve(true);\n      }).catch(function (error) {\n        console.warn(\"error\", error);\n      });\n    });\n  };\n};\n\nexport default new Firebase();","map":{"version":3,"sources":["/Users/jdavid/Documents/africariyoki/src/firebase/firebase.js"],"names":["firebase","Firebase","getLyrics","Promise","resolve","database","ref","once","then","snapshot","val","Object","values","storage","deleteRecp","userId","recipientID","child","remove","addAfricariyoki","item","id","set","title","lyricsurl","singer","audiourl","lyrics","response","catch","error","console","warn","updateLyrics","songId","update","log","postTransaction","userInfo","recpInfo","cardInfo","transInfo","user","uid","transactionId","accountNumber","bankName","recpFirstName","firstName","recpLastName","lastName","cardUsed","number","recpAmt","sendAmt","recpCurrency","sendCurrency","rate","isSuccessful","time"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\n\nclass Firebase {\n  getLyrics = () =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/lyrics/')\n      .once('value')\n      .then(snapshot => {\n        if (snapshot.val()){\n          resolve(Object.values(snapshot.val()))\n        }else{\n          resolve({})\n        }\n      })\n    })\n  }\n\n  storage = () => {\n    return firebase.storage()\n  }\n\n  deleteRecp = (userId, recipientID) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/recipients/' + userId)\n      .child(recipientID)\n      .remove()\n      .then(() => {\n        resolve(true)\n      })\n    })\n  }\n\n  addAfricariyoki = (item) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/lyrics/' + item.id + '/')\n      .set(\n        {\n          id: item.id,\n          title: item.title,\n          lyricsurl: item.lyricsurl,\n          singer: item.singer,\n          audiourl: item.audiourl,\n          lyrics: item.lyrics,\n          title: item.title,\n        },\n      )\n      .then((response) => {\n        resolve(true)\n      })\n      .catch(error => {\n        console.warn(\"error\", error)\n      })\n    })\n  }\n\n  updateLyrics = (songId, lyrics) => {\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/lyrics/' + songId + '/')\n      .update(\n        {\n          lyrics: lyrics,\n        },\n      )\n      .then((response) => {\n        console.log(\"reposne\", response)\n        resolve(true)\n      })\n      .catch(error => {\n        console.log(\"error\", error)\n      })\n    })\n  }\n\n  postTransaction = (userInfo, recpInfo, cardInfo, transInfo) =>{\n    return new Promise(resolve => {\n      firebase.database()\n      .ref('/userTransactions/' + userInfo.user.uid + '/' + transInfo.id + '/')\n      .set(\n        {\n          transactionId: transInfo.id,\n          accountNumber: recpInfo.accountNumber,\n          bankName: recpInfo.bankName,\n          recpFirstName: recpInfo.firstName,\n          recpLastName: recpInfo.lastName,\n          cardUsed: cardInfo.number,\n          recpAmt: transInfo.recpAmt,\n          sendAmt: transInfo.sendAmt,\n          recpCurrency: transInfo.recpCurrency,\n          sendCurrency: transInfo.sendCurrency,\n          rate: transInfo.rate,\n          isSuccessful: true,\n          time: '13:03'\n        },\n      )\n      .then((response) => {\n        resolve(true)\n      })\n      .catch(error => {\n        console.warn(\"error\", error)\n      })\n    })\n  }\n}\n\nexport default new Firebase();\n"]},"metadata":{},"sourceType":"module"}